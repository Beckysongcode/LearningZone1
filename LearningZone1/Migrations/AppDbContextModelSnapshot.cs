// <auto-generated />
using System;
using LearningZone1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningZone1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LearningZone1.Models.Convenor", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Bio")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("ProfilePictureURL")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Convenors");
            });

            modelBuilder.Entity("LearningZone1.Models.Course", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("ConvenorId")
                    .HasColumnType("int");

                b.Property<int>("CourseSubject")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("DifficultyId")
                    .HasColumnType("int");

                b.Property<DateTime>("EndDate")
                    .HasColumnType("datetime2");

                b.Property<string>("ImageURL")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<double>("Price")
                    .HasColumnType("float");

                b.Property<DateTime>("StartDate")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("ConvenorId");

                b.HasIndex("DifficultyId");

                b.ToTable("Courses");
            });

            modelBuilder.Entity("LearningZone1.Models.Difficulty", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Logo")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Difficulties");
            });

            modelBuilder.Entity("LearningZone1.Models.Teacher", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Bio")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("ProfilePictureURL")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Teachers");
            });

            modelBuilder.Entity("LearningZone1.Models.Teacher_Course", b =>
            {
                b.Property<int>("TeacherId")
                    .HasColumnType("int");

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.HasKey("TeacherId", "CourseId");

                b.HasIndex("CourseId");

                b.ToTable("Teachers_Courses");
            });

            modelBuilder.Entity("LearningZone1.Models.Course", b =>
            {
                b.HasOne("LearningZone1.Models.Convenor", "Convenor")
                    .WithMany("Courses")
                    .HasForeignKey("ConvenorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("LearningZone1.Models.Difficulty", "Difficulty")
                    .WithMany("Courses")
                    .HasForeignKey("DifficultyId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Convenor");

                b.Navigation("Difficulty");
            });

             modelBuilder.Entity("LearningZone1.Models.Teacher_Course", b =>
            {
                b.HasOne("LearningZone1.Models.Course", "Course")
                    .WithMany("Teachers_Courses")
                    .HasForeignKey("CourseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("LearningZone1.Models.Teacher", "Teacher")
                    .WithMany("Teachers_Courses")
                    .HasForeignKey("TeacherId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Course");

                b.Navigation("Teacher");
            });

            modelBuilder.Entity("LearningZone1.Models.Convenor", b =>
            {
                b.Navigation("Courses");
            });

            modelBuilder.Entity("LearningZone1.Models.Course", b =>
            {
                b.Navigation("Teachers_Courses");
            });

            modelBuilder.Entity("LearningZone1.Models.Difficulty", b =>
            {
                b.Navigation("Courses");
            });

            modelBuilder.Entity("LearningZone1.Models.Teacher", b =>
            {
                b.Navigation("Teachers_Courses");
            });
#pragma warning restore 612, 618
        }
    }
}
